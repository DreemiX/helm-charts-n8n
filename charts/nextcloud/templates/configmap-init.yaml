---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-init
data:
  nextcloud-init.sh: |
    set -e

    run() {
      su www-data -p -m -s /bin/sh -c "$*"
    }

    nc_download() {
      echo "Downloading and extracting nextcloud ({{ .Chart.AppVersion }}) . . ."
      wget -O - https://download.nextcloud.com/server/releases/nextcloud-{{ .Chart.AppVersion }}.tar.bz2 | tar xjf -

      {{- if (default .Values.nextcloud.deleteSkeletonFolder true) }}
      echo "Deleting skeleton folder . . ."
      rm -rf ${NC_DST_FOLDER}/nextcloud/core/skeleton
      {{- end }}

      echo "Creating data folder and setting permissions . . ."
      [ ! -d nextcloud/data ] && mkdir nextcloud/data && chown www-data:www-data nextcloud/data
      [ ! -d tmp ] && mkdir tmp

      find /app -path /app/nextcloud/data -prune -o -exec chown www-data:www-data {} +
    }
    
    cd ${NC_DST_FOLDER}

    echo "Checking if index.php already present . . ."
    if [ ! -f "${NC_DST_FOLDER}/nextcloud/index.php" ]; then
      nc_download
    else
      run php nextcloud/occ status | grep 'version:' | egrep -o '([0-9]{1,}\.?){2}([0-9]{1,})'
      NC_INSTALLED_VERSION=$(run php nextcloud/occ status | grep 'version:' | egrep -o '([0-9]{1,}\.?){2}([0-9]{1,})')

      echo "Installed Version: ${NC_INSTALLED_VERSION}"
      echo "Target Version: {{ .Chart.AppVersion }}"

      if [ "{{ .Chart.AppVersion }}" != "${NC_INSTALLED_VERSION}" ]; then 
        echo "Target Version is different from installed Version! Download new version . . ."
        nc_download

        echo "Running occ upgrade command . . ."
        run php nextcloud/occ upgrade
      else
        echo "Nextcloud is installed and present, nothing to do . . ."
      fi
    fi

    cd ${NC_DST_FOLDER}/nextcloud

    echo "Checking installation status . . ."
    if ! run php occ status | grep -q 'installed: true'; then
      echo "Installing nextcloud . . ."
      run php occ maintenance:install --database="pgsql" \
                                      --database-host="{{ .Release.Name }}-postgres" \
                                      --database-name="${POSTGRES_DB}" \
                                      --database-user="${POSTGRES_USER}" \
                                      --database-pass="${POSTGRES_PASSWORD}" \
                                      --admin-user="${NC_ADMIN_USERNAME}" \
                                      --admin-pass="${NC_ADMIN_PASSWORD}" \
                                      --data-dir="${NC_DST_FOLDER}/nextcloud/data"

      echo "Setting set +e since user input can interrupt the script . . ."
      set +e
      {{ if gt (len .Values.nextcloud.apps.disable) 0 }}
      echo "Disabling apps . . ."
      run php occ app:disable {{ join " " .Values.nextcloud.apps.disable }}
      {{ end }}

      {{- if gt (len .Values.nextcloud.apps.install) 0 }}
      for app in {{ join " " .Values.nextcloud.apps.install }}; do
        echo "Installing app ${app} . . ."
        run php occ app:install ${app}
      done
      {{- end }}

      {{- if gt (len .Values.nextcloud.customOCC) 0 }}
      {{- range .Values.nextcloud.customOCC }}
      echo "Executing custom OCC command {{ . }} . . ."
      run php occ {{ . }}
      {{ end }}
      {{- end }}

      echo "Setting set -e again . . ."
      set -e
    else
      echo "Database initialization already done, skipping this step!"
    fi

    echo "Configuring redis and cache settings . . ."
    run php occ config:system:set redis host --value="{{ .Release.Name }}-redis"
    run php occ config:system:set redis port --value="6379"
    run php occ config:system:set redis dbindex --value="0"
    run php occ config:system:set redis password --value="${REDIS_PASSWORD}" >/dev/null 2>&1
    run php occ config:system:set memcache.distributed --value='\\OC\\Memcache\\Redis'
    run php occ config:system:set memcache.locking --value='\\OC\\Memcache\\Redis'
    run php occ config:system:set memcache.local --value='\\OC\\Memcache\\APCu'

    echo "Setting overwrite.cli.url to https://${NC_DOMAIN} . . ."
    run php occ config:system:set overwrite.cli.url --value="https://${NC_DOMAIN}"

    echo "Setting overwriteprotocol to HTTPS . . ."
    run php occ config:system:set overwriteprotocol --value="https"

    echo "Adding ${NC_DOMAIN} to trusted_domains . . ."
    run php occ config:system:set trusted_domains 1 --value="${NC_DOMAIN}"

    {{- if (default .Values.nextcloud.deleteSkeletonFolder true) }}
    echo "Setting skeleton directory to empty string . . ."
    run php occ config:system:set skeletondirectory --value="" 
    {{ end }}
    
    {{- if (default .Values.nextcloud.webcron.enabled true) }}
    echo "Setting background job mode to webcron . . ."
    run php occ background:webcron
    {{ end }}

    echo "Setting trusted_proxies  . . ."
    run php occ config:system:set trusted_proxies --value="0.0.0.0/0"

    echo "Changing TMP directory . . ."
    run php occ config:system:set tempdirectory --value="${NC_DST_FOLDER}/tmp"
  
    echo "Setting log backend to 'errorlog' . . ."
    run php occ log:manage --backend="errorlog"

    {{- if (default .Values.nextcloud.disableWebUpdater true) }}
    echo "Disabling WebUpdater . . ."
    run php occ config:system:set upgrade.disable-web --value='true'
    {{ end }}

    {{- if .Values.nextcloud.defaultLanguage }}
    echo "Setting default language to {{ .Values.nextcloud.defaultLanguage }} . . ."
    run php occ config:system:set default_language --value='{{ .Values.nextcloud.defaultLanguage }}'

    {{- if (default .Values.nextcloud.forceLanguage false) }}
    echo "Enforcing default language . . ."
    run php occ config:system:set force_language --value='{{ .Values.nextcloud.defaultLanguage }}'
    {{ end }}
    {{ end }}

    {{- if .Values.nextcloud.defaultLocale }}
    echo "Setting default locale to {{ .Values.nextcloud.defaultLocale }} . . ."
    run php occ config:system:set default_locale --value='{{ .Values.nextcloud.defaultLocale }}'

    {{- if (default .Values.nextcloud.forceLocale false) }}
    echo "Enforcing default locale . . ."
    run php occ config:system:set force_locale --value='{{ .Values.nextcloud.defaultLocale }}'
    {{ end }}
    {{ end }}

    {{- if .Values.nextcloud.defaultPhoneRegion }}
    echo "Setting default PhoneRegion . . ."
    run php occ config:system:set default_phone_region --value='{{ .Values.nextcloud.defaultPhoneRegion }}'
    {{ end }}

    {{- if (default .Values.nextcloud.disableKnowledgeBase false) }}
    echo "Disabling knowledgebase . . ."
    run php occ config:system:set knowledgebaseenabled --value='false'
    {{ end }}

    {{- if not (default .Values.nextcloud.allowUserChangeDisplayName true) }}
    echo "Disabling user ability to change their display name . . ."
    run php occ config:system:set allow_user_to_change_display_name --value='false'
    {{ end }}

    {{- if (default .Values.nextcloud.mail.enabled false) }}
    echo "Configuring E-Mail settings . . ."

    {{- if .Values.nextcloud.mail.domain }}
    run php occ config:system:set mail_domain --value='{{ .Values.nextcloud.mail.domain }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.fromAddress }}
    run php occ config:system:set mail_from_address --value='{{ .Values.nextcloud.mail.fromAddress }}'
    {{ end }}

    {{- if (default .Values.nextcloud.mail.debug false) }}
    run php occ config:system:set mail_smtpdebug --value='{{ .Values.nextcloud.mail.debug }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.plaintextOnly }}
    run php occ config:system:set mail_send_plaintext_only --value='{{ .Values.nextcloud.mail.plaintextOnly }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.mode }}
    run php occ config:system:set mail_smtpmode --value='{{ .Values.nextcloud.mail.mode }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.smtp.host }}
    run php occ config:system:set mail_smtphost --value='{{ .Values.nextcloud.mail.smtp.host }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.smtp.port }}
    run php occ config:system:set mail_smtpport --value='{{ .Values.nextcloud.mail.smtp.port }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.smtp.timeout }}
    run php occ config:system:set mail_smtptimeout --value='{{ .Values.nextcloud.mail.smtp.timeout }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.smtp.secure }}
    run php occ config:system:set mail_smtpsecure --value='{{ .Values.nextcloud.mail.smtp.secure }}'
    {{ end }}

    {{- if (default .Values.nextcloud.mail.auth.enabled false) }}
    run php occ config:system:set mail_smtpauth --value='true'

    {{- if .Values.nextcloud.mail.auth.type }}
    run php occ config:system:set mail_smtpauthtype --value='{{ .Values.nextcloud.mail.auth.type }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.auth.username }}
    run php occ config:system:set mail_smtpname --value='{{ .Values.nextcloud.mail.auth.username }}'
    {{ end }}

    {{- if .Values.nextcloud.mail.auth.password }}
    run php occ config:system:set mail_smtppassword --value='{{ .Values.nextcloud.mail.auth.password }}'
    {{ end }}
    {{ end }}
    {{ end }}

    echo "Done!"
